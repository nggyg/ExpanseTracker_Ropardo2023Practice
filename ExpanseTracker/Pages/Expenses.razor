@page "/expenses"
@page "/expenses/{planned:bool}"
@using ExpanseTracker.Data
@using ExpanseTracker.Data.Models
@using ExpanseTracker.Services;
@inject ExpenseService EService;
@inject NavigationManager NavManager;

<table>
    <tr>
        <td>
            <h3>Expenses</h3>
        </td>
        <td>
            <InputSelect id="Planned" @bind-Value="@planned" title="null">
                <option value="null" @onclick='()=>NavManager.NavigateTo("/expenses")'>All</option>
                <option value="True" @onclick='()=>NavManager.NavigateTo("/expenses/True")'>Planned</option>
                <option value="False" @onclick='()=>NavManager.NavigateTo("/expenses/False")'>Unplanned</option>
                
            </InputSelect>
        </td>
    </tr>
</table>

@if(@planned==null){
<table>
    @foreach(var exp in Exps)
    {
        <tr>
            <td>@exp.Id</td>
            <td>@exp.Title</td>
            <td>@exp.Amount</td>
            <td>@exp.Date.ToString("dd-MM-yyyy")</td>
            <td>
                @if (@exp.Planned)
                {
                    <h10>planned</h10>
                }
                else
                {
                    <h10>unplanned</h10>
                }
            </td>
            <td><button @onclick="()=>remove_exp(exp)"> Delete</button></td>
            <td><button @onclick='()=>NavManager.NavigateTo("/editexpenses/"+exp.Id)'> Edit</button></td>
        </tr>
    }
</table>

<h6> Total spent: @Exps.Sum(a=>a.Amount)</h6>
}
@if (@planned == true)
{
    <table>
        @foreach (var exp in Exps.Where(a=>a.Planned))
        {
            <tr>
                <td>@exp.Id</td>
                <td>@exp.Title</td>
                <td>@exp.Amount</td>
                <td>@exp.Date.ToString("dd-MM-yyyy")</td>
                <td>
                    @if (@exp.Planned)
                    {
                        <h10>planned</h10>
                    }
                    else
                    {
                        <h10>unplanned</h10>
                    }
                </td>
                <td><button @onclick="()=>remove_exp(exp)"> Delete</button></td>
                <td><button @onclick='()=>NavManager.NavigateTo("/editexpenses/"+exp.Id)'> Edit</button></td>
            </tr>
        }
    </table>
    <h6> Total spent: @Exps.Where(a=>a.Planned).Sum(a=>a.Amount)</h6>

}
@if (@planned == false)
{
    <table>
        @foreach (var exp in Exps.Where(a=>!a.Planned))
        {
            <tr>
                <td>@exp.Id</td>
                <td>@exp.Title</td>
                <td>@exp.Amount</td>
                <td>@exp.Date.ToString("dd-MM-yyyy")</td>
                <td>
                    @if (@exp.Planned)
                    {
                        <h10>planned</h10>
                    }
                    else
                    {
                        <h10>unplanned</h10>
                    }
                </td>
                <td><button @onclick="()=>remove_exp(exp)"> Delete</button></td>
                <td><button @onclick='()=>NavManager.NavigateTo("/editexpenses/"+exp.Id)'> Edit</button></td>
            </tr>
        }
    </table>    
    <h6> Total spent: @Exps.Where(a=>!a.Planned).Sum(a=>a.Amount)</h6>

}


<button @onclick='()=>NavManager.NavigateTo("/expenses/new")'>Add Expense</button>



@code {
    private List<Expense> Exps = new List<Expense>();
    private int New_id = 1;
    [Parameter]
    public bool? planned { get; set; } = null;

    public void remove_exp(Expense todo)
    {
        Exps.Remove(todo);
        EService.removeExpense(todo);
    }


    private void loadDefault()
    {
        Exps = EService.getExpenses().OrderBy(e => e.Id).ToList();
        New_id = Exps.Max(a=>a.Id) + 1;
    }

    protected override void OnInitialized() //process to run when page is loaded
    {
        loadDefault();
        if (planned == true)
            Exps = Exps.Where(a => a.Planned).ToList();
        if (planned == false)
            Exps = Exps.Where(a => !a.Planned).ToList();
    }

}
